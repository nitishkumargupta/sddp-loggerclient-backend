#To Edit   https://editor.swagger.io/
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/member-data":
    get:
      summary: show member
      responses:
        '200':
          description: successful
  "/users":
    post:
      summary: create user
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Signed up sucessfully.
        '422':
          description: not a valid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Required fields are missing
        '409':
          description: user exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User already exists. Please try with another email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
              required: true
              example:
                user:
                  email: test@example.com
                  password: '12345678'
  "/users/sign_in":
    post:
      summary: create session
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id_token:
                    type: string
                example:
                  message: You are logged in.
                  id_token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNjc4OTA4MTMyLCJleHAiOjE2Nzg5MTE3MzIsImp0aSI6ImRjYTMwNWUxLWJlNjMtNDNjMi04ZWZmLWZkM2I1MGQ4NTcwMCJ9.mEp5ME7MNBSC_io1DUZdYBJIMQqE497bz9LOIrZJs3g
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: true
              example:
                email: test@example.com
                password: '12345678'
  "/users/sign_out":
    delete:
      summary: delete session
      security:
      - BearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: You are logged out.
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Hmm nothing happened.
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
